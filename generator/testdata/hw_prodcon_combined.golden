package cofaas:application

interface greeter {
  record hello-request {
    name: string,
  }

  record hello-reply {
    message: string,
  }

  say-hello: func(arg: hello-request) -> result<hello-reply, s32>

  say-hello-stream-reply: func(arg: hello-request) -> result<hello-reply, s32>

  init-component: func()
}

interface producer-consumer {
  record consume-byte-request {
    value: list<u8>,
  }

  record consume-byte-reply {
    value: bool,
    length: s32,
  }

  consume-byte: func(arg: consume-byte-request) -> result<consume-byte-reply, s32>

  consume-stream: func(arg: consume-byte-request) -> result<consume-byte-reply, s32>

  init-component: func()
}

world producer-interface {
  import producer-consumer

  export greeter
}
world consumer-interface {
  export producer-consumer
}
world top-level {
  export greeter
}
